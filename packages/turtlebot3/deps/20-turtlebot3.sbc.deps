#!/bin/bash
# Reference: [http://emanual.robotis.com/docs/en/popup/turtlebot3_ros2_sbc_setting]

set -e

DEFAULT_INSTALL=true

#
# Install TurtleBot3 ROS 2 Packages
#
install_turtlebot3_ros2_packages()
{
  # Install Cartographer dependencies
  sudo apt-get update &&sudo apt install -y \
    google-mock \
    libceres-dev \
    liblua5.3-dev \
    libboost-dev \
    libboost-iostreams-dev \
    libprotobuf-dev \
    protobuf-compiler \
    libcairo2-dev \
    libpcl-dev \
    python3-sphinx

  # Install Gazebo9
  if [[ "$http_proxy" == "" ]];then
    curl -sSL http://get.gazebosim.org | sh
  else
    curl -sSL http://get.gazebosim.org|sed 's/apt-key adv --keyserver keyserver.ubuntu.com --recv-keys D2486D2DD83DB69272AFE98867170598AF24974/apt-key adv --keyserver keyserver.ubuntu.com --keyserver-options http-proxy=$http_proxy --recv-keys D2486D2DD83DB69272AFE98867170598AF24974/g'|sh
  fi
  sudo apt install -y ros-dashing-gazebo-*

  #Install Cartographer
  sudo apt install -y ros-dashing-cartographer

  # Install Navigation2
  sudo apt install -y ros-dashing-navigation2
  sudo apt install -y ros-dashing-nav2-bringup

}

#
# Install udev rules
#
install_udev_rules()
{
  echo "Install udev rules for turtlebot3 ..."

  # Following commands show how to assign OpenCR port authorization to TurtleBot3.
  if [ ! -f /etc/udev/rules.d/99-turtlebot3-cdc.rules ]; then
    sudo wget -t 3 -c https://raw.githubusercontent.com/ROBOTIS-GIT/turtlebot3/ros2/turtlebot3_bringup/99-turtlebot3-cdc.rules -P /etc/udev/rules.d/
  fi

  install_turtlebot3_deps
}

install_turtlebot3_deps()
{
  sudo udevadm control --reload-rules
  sudo udevadm trigger
}

release_package()
{
  echo "Install turtlebot3 sbc to rootfs"
  SOURCE_DIR=$1
  RELEASE_DIR=${2}
  ROOTFS="${RELEASE_DIR}"/rootfs

  sudo mkdir "$ROOTFS"/etc/udev/rules.d -p
  sudo cp -rf /etc/udev/rules.d/99-turtlebot3-cdc.rules "$ROOTFS"/etc/udev/rules.d/99-turtlebot3-cdc.rules
  
  # add install command to install.sh
  declare -f install_turtlebot3_deps >> "${RELEASE_DIR}/install.sh"
  echo "install_turtlebot3_deps" >> "${RELEASE_DIR}/install.sh"
}

#
# Main entry to build deps
#
function main()
{

  if [[ "$DEFAULT_INSTALL" != "true" ]]; then
    echo "Default not install, skip"
    exit
  fi

  TARGET_DIR=${1}
  RELEASE_OPT=${2}
  RELEASE_DIR=${3}

  if [ ! -d "${TARGET_DIR}" ]; then
    mkdir -p "${TARGET_DIR}"
    echo "No such directory, create \"${TARGET_DIR}\""
  fi

  # Install files to rootfs with --release
  if [[ "$RELEASE_OPT" == "--release" && "$RELEASE_DIR" != "" ]];then
    ROOTFS=${RELEASE_DIR}/rootfs
    release_package "${TARGET_DIR}" "${RELEASE_DIR}"
    exit
  fi

  install_udev_rules
  install_turtlebot3_ros2_packages
}

main "$@"
